swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "bringalong"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "todo@test.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/"
schemes:
- "https"
- "http"
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /users/current:
    get:
      summary: ""
      description: ""
      operationId: "getCurrentUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      security:
        - Bearer: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CurrentUserResponse"
  /users/login:
    post:
      summary: ""
      description: ""
      operationId: "login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        schema:
          $ref: "#/definitions/LoginRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/LoginResponse"
  /users/logout:
    get:
      summary: ""
      description: ""
      operationId: "logout"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      security:
        - Bearer: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/LogoutResponse"
  /orders/:
    post:
      summary: ""
      description: ""
      operationId: "createOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/CreateOrderRequest"
      security:
        - Bearer: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CreateOrderResponse"
  /orders/{filter}:
    get:
      summary: ""
      description: ""
      operationId: "getOrders"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "filter"
        description: ""
        required: true
        type: "string"
        enum:
          - "own"
          - "accepted"
      security:
        - Bearer: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetOrdersResponse"
  /orders/{lat}/{lng}:
    get:
      summary: ""
      description: ""
      operationId: "getOrdersByLatLong"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "lat"
        description: ""
        required: true
        type: "number"
      - in: "path"
        name: "lng"
        description: ""
        required: true
        type: "number"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetOrdersByLatLongResponse"
  /order/{orderId}:
    get:
      summary: ""
      description: ""
      operationId: "getOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      security:
        - Bearer: []
      parameters:
      - in: "path"
        name: "orderId"
        description: ""
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetOrderResponse"
    delete:
      summary: ""
      description: ""
      operationId: "deleteOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      security:
        - Bearer: []
      parameters:
      - in: "path"
        name: "orderId"
        description: ""
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/DeleteOrderResponse"
    put:
      summary: ""
      description: ""
      operationId: "updateOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      security:
        - Bearer: []
      parameters:
      - in: "path"
        name: "orderId"
        description: ""
        required: true
        type: "integer"
        format: "int32"
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/UpdateOrderRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UpdateOrderResponse"
  /orders/{orderId}/bring:
    post:
      summary: ""
      description: ""
      operationId: "bringOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      security:
        - Bearer: []
      parameters:
      - in: "path"
        name: "orderId"
        description: ""
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BringOrderResponse"
definitions:
  CurrentUserResponse:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/User"
  User:
    type: "object"
    properties:
      id:
        type: "string"
      lat:
        type: "number"
      lng:
        type: "number"
      name:
        type: "string"
      street:
        type: "string"
      number:
        type: "number"
      zipcode:
        type: "string"
      city:
        type: "string"
  LoginRequest:
    type: "object"
    properties:
      login:
        type: "string"
      password:
        type: "string"
  LoginResponse:
    type: "object"
    properties:
      token:
        type: "string"
  LogoutResponse:
    type: "object"
  GetOrderResponse:
    type: "object"
    properties:
      order:
        $ref: "#/definitions/Order"
      user:
        $ref: "#/definitions/User"
  GetOrdersResponse:
    type: "object"
    properties:
      orders:
        type: "array"
        items: 
          $ref: "#/definitions/UserOrder"
  GetOrdersByLatLongResponse:
    type: "object"
    properties:
      orders:
        type: "array"
        items: 
          $ref: "#/definitions/UserOrder"
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      text:
        type: "string"
      dropHint:
        type: "string"
      deadline:
        type: "string"
      estimatedAmount:
        type: "number"
      currency:
        type: "string"
  UserOrder:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/User"
      order:
        $ref: "#/definitions/Order"
  CreateOrderRequest:
    type: "object"
    properties:
      order:
        $ref: "#/definitions/Order"
  CreateOrderResponse:
    type: "object"
    properties:
      orderId:
        type: "integer"
        format: "int32"
  UpdateOrderRequest:
    type: "object"
    properties:
      order:
        $ref: "#/definitions/Order"
  UpdateOrderResponse:
    type: "object"
    properties:
      orderId:
        type: "integer"
        format: "int32"
  DeleteOrderResponse:
    type: "object"
    properties:
      orderId:
        type: "integer"
        format: "int32"
  BringOrderResponse:
    type: "object"
    properties:
      order:
        $ref: "#/definitions/Order"